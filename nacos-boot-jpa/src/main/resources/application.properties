server.port=10016

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/db2020?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true

spring.datasource.username=root
spring.datasource.password=mysql


# jpa�����򹤳�
spring.jpa.hibernate.ddl-auto=update
#ddl-auto:create----每次运行该程序，没有表格会新建表格，表内有数据会清空
#ddl-auto:create-drop----每次程序结束的时候会清空表
#ddl-auto:update----每次运行程序，没有表格会新建表格，表内有数据不会清空，只会更新
#ddl-auto:validate----运行程序会校验数据与数据库的字段类型是否相同，不同会报错
# 显示sql
spring.jpa.show-sql=true
spring.jpa.database=MYSQL
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#直接映射，不会做过多任何的处理和转换
#org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#表名，字段为小写，当有大写字母的时候会添加下划线分隔符号（默认是这个）
#org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#如果还不满足你的要求可以自定义，如：你想使用SpringPhysicalNamingStrategy ，又想命名不被转化为小写，可以自定义实现自己的逻辑，像SpringPhysicalNamingStrategy 中isCaseInsensitive方法是用来指定数据库是否区分大小写的。

#//自定义配置类
#public class MySQLUpperCaseStrategy extends SpringPhysicalNamingStrategy {
#@Override
#protected boolean isCaseInsensitive(JdbcEnvironment jdbcEnvironment) {
#return false;
#}
#}
