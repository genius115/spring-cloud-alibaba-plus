# 应用名称
spring.application.name=example-boot

# 应用服务 WEB 访问端口
server.port=8180

# 
spring.profiles.active=dev

#数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/db0?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


#sql打印
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#分页插件
#标识数据库方言
pagehelper.helperDialect=mysql
#启用合理化  <1 第一页   pagenums>pages 最后一页
pagehelper.reasonable=true
#为了支持startPage (Object params)方法，用于从对象中根据属性名取值，可以配置pageNum,pageSize
pagehelper.params=count=countsql
#支持通过Mapper 接口参数来传递分页参数，默认值为false 分页插件会从查询方法的参数中，自动工具上面params配置字符安中取值
pagehelper.supportMethodsArguments=true
#如果pageSize=0 就会查询出全部的结果（相当于没有执行分页查询）
pagehelper.page-size-zero=true

########### spring boot 日志  info ########### 
#logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=trace

########### spring boot 日志  info ########### 
swagger.title=spring-boot-starter-swagger
swagger.description=Starter for swagger 2.x
swagger.version=1.9.0.RELEASE
swagger.license=Apache License, Version 2.0
swagger.licenseUrl=https://www.apache.org/licenses/LICENSE-2.0.html
swagger.termsOfServiceUrl=https://github.com/dyc87112/spring-boot-starter-swagger
swagger.contact.name=didi
swagger.contact.url=http://blog.didispace.com
swagger.contact.email=dyc87112@qq.com
swagger.base-package=com.xiao.mai
swagger.base-path=/**


########### ko-time ########### 
# 需要监测的切面范围，参考aop的@pointcut 或者左侧常见问题
ko-time.pointcut=execution(public * com.xiao.mai.controller.*.*(..))

#可选配置（以下配置一般不用设置）
# 是否开启koTime，默认开启，当为false时，关闭koTime
ko-time.enable=true
# 是否开启控制输出，默认false
ko-time.log-enable=false
# 控制台输出语言（english/chinese）默认chinese
ko-time.log-language=chinese
# 时间阈值，用于前端展示，大于阈值显示红色，小于阈值显示绿色，默认800
ko-time.threshold=800.0
# 前端页面调用接口的上下文环境，无法自动获取时可手动配置 v2.0.1开始支持
#ko-time.context-path=http://localhost:80
# 是否开启异常检测，默认为false,开启后会对方法内部抛出的异常进行统计 v2.0.0开始支持
#ko-time.exception-enable=true
# 是否开启认证，默认为false,开启后需要登录才能访问调用链路 v2.0.2开始支持
#ko-time.auth-enable=true
# 登录用户 v2.0.2开始支持
#ko-time.user-name=xxxx
# 登录密码 v2.0.2开始支持
#ko-time.password=xxxx


#自定义参数
val=666666